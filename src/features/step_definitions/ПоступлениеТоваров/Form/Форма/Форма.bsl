//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПодготавливаюНачальныеДанные()","ЯПодготавливаюНачальныеДанные","Допустим я подготавливаю начальные данные");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВСпискеДокументовНетЭлементов(Парам01)","ВСпискеДокументовНетЭлементов","Допустим в списке документов ""ПоступлениеТоваров"" нет элементов");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюНовыйДокумент(Парам01)","ЯСоздаюНовыйДокумент","Когда я создаю новый документ ""ПоступлениеТоваров""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВыбираюКонтрагента()","ЯВыбираюКонтрагента","И я выбираю контрагента");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюТабличнуюЧастьДокумента()","ЯЗаполняюТабличнуюЧастьДокумента","И я заполняю табличную часть документа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПровожуДокумент()","ЯПровожуДокумент","И я провожу документ");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументСформировалДвиженияКорректно()","ДокументСформировалДвиженияКорректно","Тогда документ сформировал движения корректно");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВСпискеДокументовЕстьЭлементы(Парам01)","ВСпискеДокументовЕстьЭлементы","Допустим в списке документов ""ПоступлениеТоваров"" есть элементы");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция утвПолучитьЭлементГруппуСправочника(ИмяСправочника, Код = "", Наименование = "", ИскатьГруппу = Ложь)
	ПредставлениеПоиска = "";
	Если ПустаяСтрока(Код) И ПустаяСтрока(Наименование) Тогда
		ВызватьИсключение "Не заполнено ни одно свойство поиска";
	ИначеЕсли ЗначениеЗаполнено(Код) И ЗначениеЗаполнено(Наименование) Тогда 
		ПредставлениеПоиска = "коду """ + Код + """ и наименованию """ + Наименование + """";
	ИначеЕсли ЗначениеЗаполнено(Код) Тогда 
		ПредставлениеПоиска = "коду """ + Код + """";
	ИначеЕсли ЗначениеЗаполнено(Наименование) Тогда 
		ПредставлениеПоиска = "наименованию """ + Наименование + """";
	КонецЕсли; 
	
	ТекстИсключения = "Не нашли #ГруппуИлиЭлемент справочника #ИмяСправочника по #ПредставлениеПоиска";
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ГруппуИлиЭлемент", ?(ИскатьГруппу, "группу", "элемент"));
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ИмяСправочника", ИмяСправочника);
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ПредставлениеПоиска", ПредставлениеПоиска);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Справочник
		|ГДЕ
		|	Справочник.ЭтоГруппа = &ИскатьГруппу
		| " + ?(ПустаяСтрока(Код), "", "И Справочник.Код = &Код") + "
		| " + ?(ПустаяСтрока(Наименование), "", "И Справочник.Наименование = &Наименование");
	
	Запрос.УстановитьПараметр("ИскатьГруппу", ИскатьГруппу);
	Запрос.УстановитьПараметр("Код", Код);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Ссылка;
КонецФункции

&НаСервере
Процедура УдалитьЭлементыСправочникаВГруппе(ИмяСправочника, Группа)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочник.Ссылка
		|ИЗ
		|	Справочник." + ИмяСправочника + " КАК Справочник
		|ГДЕ
		|	Справочник.Родитель = &Группа";
	
	Запрос.УстановитьПараметр("Группа", Группа);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭлементОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЭлементОбъект.Удалить();
	КонецЦикла; 
КонецПроцедуры 

&НаСервере
Процедура утвВГруппеСправочникаНетЭлементов(ИмяСправочника, Группа, ТекстИсключения = "" )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник." + ИмяСправочника + " КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Родитель = &Группа";
	
	Запрос.УстановитьПараметр("Группа", Группа);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда 
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПутьКФайлуОтносительноКаталогаFeatures(ИмяФайлаСРасширением)
	ПутьКФайлу = "";
	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	ПутьКТекущемуFeatureФайлу = СостояниеVanessaBehavior.ТекущаяФича.ПолныйПуть;
	ПутьКФайлу = Лев(ПутьКТекущемуFeatureФайлу, СтрНайти(ПутьКТекущемуFeatureФайлу, "features") - 1) + ИмяФайлаСРасширением;
	Возврат ПутьКФайлу;
КонецФункции 

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета(ИмяМакета)
	Ванесса.ЗапретитьВыполнениеШагов();
	НачальноеИмяФайла = ПолучитьПутьКФайлуОтносительноКаталогаFeatures("tools\Выгрузка и загрузка данных XML.epf");
	Адрес = "";
	НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьFixtureИзМакета_Завершение", ЭтотОбъект, ИмяМакета), Адрес, НачальноеИмяФайла, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета_Завершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	ЗагрузитьFixtureИзМакета_ЗавершениеНаСервере(Адрес, ДополнительныеПараметры);
	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры 

&НаСервере
Процедура ЗагрузитьFixtureИзМакета_ЗавершениеНаСервере(Адрес, ИмяМакета)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ВнешняяОбработка = ВнешниеОбработки.Создать(ИмяВременногоФайла, Ложь);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Текст = РеквизитФормыВЗначение("Объект").ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	
	ВременныйДокумент = Новый ТекстовыйДокумент;
	ВременныйДокумент.УстановитьТекст(Текст);
	ВременныйДокумент.Записать(ИмяВременногоФайла, КодировкаТекста.UTF8);
	ВнешняяОбработка.ВыполнитьЗагрузку(ИмяВременногоФайла);
КонецПроцедуры 

#КонецОбласти 

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим я подготавливаю начальные данные
//@ЯПодготавливаюНачальныеДанные()
Процедура ЯПодготавливаюНачальныеДанные() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Допустим в списке документов "ПоступлениеТоваров" нет элементов
//@ВСпискеДокументовНетЭлементов(Парам01)
Процедура ВСпискеДокументовНетЭлементов(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда я создаю новый документ "ПоступлениеТоваров"
//@ЯСоздаюНовыйДокумент(Парам01)
Процедура ЯСоздаюНовыйДокумент(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я выбираю контрагента
//@ЯВыбираюКонтрагента()
Процедура ЯВыбираюКонтрагента() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я заполняю табличную часть документа
//@ЯЗаполняюТабличнуюЧастьДокумента()
Процедура ЯЗаполняюТабличнуюЧастьДокумента() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я провожу документ
//@ЯПровожуДокумент()
Процедура ЯПровожуДокумент() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда документ сформировал движения корректно
//@ДокументСформировалДвиженияКорректно()
Процедура ДокументСформировалДвиженияКорректно() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Допустим в списке документов "ПоступлениеТоваров" есть элементы
//@ВСпискеДокументовЕстьЭлементы(Парам01)
Процедура ВСпискеДокументовЕстьЭлементы(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля